import time
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.chrome.options import Options


def test_calculator():
    """
    –ê–≤—Ç–æ—Ç–µ—Å—Ç –¥–ª—è –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞ —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π
    """
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Chrome WebDriver
    chrome_options = Options()
    # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –±—Ä–∞—É–∑–µ—Ä–∞
    chrome_options.add_argument("--start-maximized")

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥—Ä–∞–π–≤–µ—Ä–∞
    driver = webdriver.Chrome(options=chrome_options)

    # –®–∞–≥ 1: –û—Ç–∫—Ä—ã—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞
    print("–®–∞–≥ 1: –û—Ç–∫—Ä—ã–≤–∞—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞...")
    driver.get(
                "https://bonigarcia.dev/selenium"
                "-webdriver-java/slow-calculator.html"
        )

    # –®–∞–≥ 2: –í–≤–µ—Å—Ç–∏ –∑–Ω–∞—á–µ–Ω–∏–µ 45 –≤ –ø–æ–ª–µ –∑–∞–¥–µ—Ä–∂–∫–∏
    print("–®–∞–≥ 2: –í–≤–æ–∂—É –∑–Ω–∞—á–µ–Ω–∏–µ 45 –≤ –ø–æ–ª–µ –∑–∞–¥–µ—Ä–∂–∫–∏...")
    delay_input = driver.find_element(By.CSS_SELECTOR, "#delay")
    delay_input.clear()
    delay_input.send_keys("10")

    # –®–∞–≥ 3: –ù–∞–∂–∞—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫–∏ 7, +, 8, =
    print("–®–∞–≥ 3: –í—ã–ø–æ–ª–Ω—è—é –≤—ã—á–∏—Å–ª–µ–Ω–∏–µ 7 + 8 = ...")

    # –ù–∞–∂–∏–º–∞–µ–º –∫–Ω–æ–ø–∫—É 7
    button_7 = driver.find_element(By.XPATH, "//span[text()='7']")
    button_7.click()

    # –ù–∞–∂–∏–º–∞–µ–º –∫–Ω–æ–ø–∫—É +
    button_plus = driver.find_element(By.XPATH, "//span[text()='+']")
    button_plus.click()

    # –ù–∞–∂–∏–º–∞–µ–º –∫–Ω–æ–ø–∫—É 8
    button_8 = driver.find_element(By.XPATH, "//span[text()='8']")
    button_8.click()

    # –ù–∞–∂–∏–º–∞–µ–º –∫–Ω–æ–ø–∫—É =
    button_equals = driver.find_element(By.XPATH, "//span[text()='=']")
    button_equals.click()

    # –®–∞–≥ 4: –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç 15 —á–µ—Ä–µ–∑ 45 —Å–µ–∫—É–Ω–¥
    print("–®–∞–≥ 4: –û–∂–∏–¥–∞—é —Ä–µ–∑—É–ª—å—Ç–∞—Ç 15...")
    # –ó–∞—Å–µ–∫–∞–µ–º –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ –æ–ø–µ—Ä–∞—Ü–∏–∏
    start_time = time.time()

    # –ñ–¥–µ–º –ø–æ—è–≤–ª–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Å —Ç–∞–π–º–∞—É—Ç–æ–º 50 —Å–µ–∫—É–Ω–¥ (—á—É—Ç—å –±–æ–ª—å—à–µ 45)
    wait = WebDriverWait(driver, 50)
    wait.until(
        EC.invisibility_of_element_located((By.ID, "spinner"))
    )

    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
    result_element = driver.find_element(By.CLASS_NAME, "screen")
    result_text = result_element.text

    # –ó–∞—Å–µ–∫–∞–µ–º –≤—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è –æ–ø–µ—Ä–∞—Ü–∏–∏
    end_time = time.time()
    # –í—ã—á–∏—Å–ª—è–µ–º –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
    execution_time = end_time - start_time

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    assert result_text == "15", f"–û–∂–∏–¥–∞–ª—Å—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç '15', "\
        f"–ø–æ–ª—É—á–µ–Ω '{result_text}'"

    print(f"‚úÖ –¢–µ—Å—Ç –ø—Ä–æ–π–¥–µ–Ω —É—Å–ø–µ—à–Ω–æ! –†–µ–∑—É–ª—å—Ç–∞—Ç: {result_text}")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø—Ä–∏–º–µ—Ä–Ω–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç
    # –∑–∞–¥–µ—Ä–∂–∫–µ (45 —Å–µ–∫—É–Ω–¥)
    # –î–æ–ø—É—Å–∫–∞–µ–º –ø–æ–≥—Ä–µ—à–Ω–æ—Å—Ç—å –≤ ¬±5 —Å–µ–∫—É–Ω–¥
    expected_delay = 10
    tolerance = 5
    if abs(execution_time - expected_delay) <= tolerance:
        print(f"‚úÖ –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ: {execution_time:.2f}"
              " —Å–µ–∫ (–æ–∂–∏–¥–∞–ª–æ—Å—å ~{expected_delay} —Å–µ–∫)")

        
    else:
        print(f"‚ö†Ô∏è –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –æ—Ç –æ–∂–∏–¥–∞–µ–º–æ–≥–æ:"
              f" {execution_time:.2f} —Å–µ–∫ (–æ–∂–∏–¥–∞–ª–æ—Å—å"
              f" ~{expected_delay} —Å–µ–∫)")

    # –ó–∞–∫—Ä—ã–≤–∞–µ–º –±—Ä–∞—É–∑–µ—Ä
    print("–ó–∞–∫—Ä—ã–≤–∞—é –±—Ä–∞—É–∑–µ—Ä...")
    driver.quit()


print("üöÄ –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ—Ç–µ—Å—Ç–∞ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞...")
test_calculator()
print("üéâ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!")
